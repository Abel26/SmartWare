/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package request.production;

import stock_management.inbound.*;
import user.*;
import java.sql.*;
import connection.connection;
import java.text.SimpleDateFormat;
import javax.swing.JLabel;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import javax.print.attribute.standard.Destination;
import javax.swing.JOptionPane;
import java.util.Date;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/**
 *
 * @author Lenovo
 */
public class form_production_request extends javax.swing.JPanel {

    private Integer selectedSkuId = null; // Untuk menyimpan ID sku yang dipilih

    /**
     * Creates new form create
     */
    public form_production_request(String username) {
        initComponents();
//        this.setExtendedState(JPanel.MAXIMIZED_BOTH);
        
        name_operator.setText(username);
        
        LocalDateTime now = LocalDateTime.now();
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd-MM-yyyy");
        String formattedTime = now.format(formatter);
        
        // Set waktu ke field time
        time.setText(formattedTime);
        
        // Load kategori dari database
        loadCategories();
        
        // Tambahkan document listener untuk field SKU
        sku.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                searchSKU();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                searchSKU();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                searchSKU();
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        name_operator = new javax.swing.JTextField();
        sku = new javax.swing.JTextField();
        quantity = new javax.swing.JTextField();
        back = new javax.swing.JToggleButton();
        save = new javax.swing.JToggleButton();
        time = new javax.swing.JTextField();
        category_product = new javax.swing.JComboBox<>();
        price2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        description = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Cambria Math", 1, 36)); // NOI18N
        jLabel1.setText("Create Request");

        jLabel2.setFont(new java.awt.Font("Cambria Math", 0, 18)); // NOI18N
        jLabel2.setText("Nama Operator");

        jLabel3.setFont(new java.awt.Font("Cambria Math", 0, 18)); // NOI18N
        jLabel3.setText("Waktu");

        jLabel4.setFont(new java.awt.Font("Cambria Math", 0, 18)); // NOI18N
        jLabel4.setText("Kategori Produk");

        jLabel5.setFont(new java.awt.Font("Cambria Math", 0, 18)); // NOI18N
        jLabel5.setText("SKU");

        jLabel6.setFont(new java.awt.Font("Cambria Math", 0, 18)); // NOI18N
        jLabel6.setText("Kuantitas");

        name_operator.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                name_operatorActionPerformed(evt);
            }
        });

        quantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantityActionPerformed(evt);
            }
        });

        back.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        back.setText("Kembali");

        save.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        save.setText("Simpan");
        save.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveMouseClicked(evt);
            }
        });
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        category_product.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "freebase", "salt nic", "hybrid", "pods friendly" }));
        category_product.setName(""); // NOI18N

        price2.setFont(new java.awt.Font("Cambria Math", 0, 18)); // NOI18N
        price2.setText("Deskripsi");

        description.setColumns(20);
        description.setRows(5);
        jScrollPane1.setViewportView(description);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 51, 51));
        jLabel7.setText("*");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 51, 51));
        jLabel8.setText("*");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 51, 51));
        jLabel9.setText("*");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 51, 51));
        jLabel10.setText("*");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 51, 51));
        jLabel11.setText("*");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 51, 51));
        jLabel12.setText("*");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(back)
                                .addGap(28, 28, 28)
                                .addComponent(save))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(name_operator, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 298, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel7))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel8))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel9))
                                    .addComponent(sku, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(time, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(242, 242, 242)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(quantity)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel10))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(category_product, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel11))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(price2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel12))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 298, Short.MAX_VALUE)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(373, 373, 373)
                        .addComponent(jLabel1)))
                .addContainerGap(884, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel1)
                .addGap(59, 59, 59)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(name_operator, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel8))
                                .addGap(18, 18, 18)
                                .addComponent(time, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(jLabel11))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(category_product, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel9))
                        .addGap(18, 18, 18)
                        .addComponent(sku, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(185, 185, 185)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(save, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(price2)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel12))
                .addContainerGap(200, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void quantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quantityActionPerformed

    private void saveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveMouseClicked
        // Validasi input
        if (selectedSkuId == null || name_operator.getText().trim().isEmpty() || quantity.getText().trim().isEmpty()) {
            javax.swing.JOptionPane.showMessageDialog(this, "Pastikan semua data telah diisi dengan benar!", "Peringatan", javax.swing.JOptionPane.WARNING_MESSAGE);
            return;
        }

        try {
            // Koneksi ke database
            Connection conn = new connection().connect();

            // Ambil ID operator berdasarkan nama operator
            String operatorName = name_operator.getText().trim();
            Integer operatorId = null;

            String operatorQuery = "SELECT id FROM tb_users WHERE username = ?";
            PreparedStatement operatorStmt = conn.prepareStatement(operatorQuery);
            operatorStmt.setString(1, operatorName);

            ResultSet operatorRs = operatorStmt.executeQuery();
            if (operatorRs.next()) {
                operatorId = operatorRs.getInt("id");
            } else {
                javax.swing.JOptionPane.showMessageDialog(this, "Operator tidak ditemukan!", "Peringatan", javax.swing.JOptionPane.WARNING_MESSAGE);
                operatorRs.close();
                operatorStmt.close();
                conn.close();
                return;
            }
            operatorRs.close();
            operatorStmt.close();

            // Ambil ID kategori
            int id_category = -1;
            String category_name = category_product.getSelectedItem().toString();
            
            String sqlCategoryProduct = "SELECT id from tb_category where name = ?";
            PreparedStatement stmtRole = conn.prepareStatement(sqlCategoryProduct);
            stmtRole.setString(1, category_name);
            ResultSet rs = stmtRole.executeQuery();

            if (rs.next()) {
                id_category = rs.getInt("id");
            }
            rs.close();
            stmtRole.close();

            // Query untuk menyimpan data ke tb_production_request
            String sql = "INSERT INTO tb_production_request (no_production, date, id_operator, id_sku, id_category, description, qty) VALUES (?, ?, ?, ?, ?, ?, ?)";
            PreparedStatement stmt = conn.prepareStatement(sql);

            // Generate nomor production (no_production) secara unik
            String noProduction = "PR-" + System.currentTimeMillis();

            DateTimeFormatter dbFormatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
            LocalDateTime now = LocalDateTime.now();
            String formattedDate = now.format(dbFormatter);

            // Set nilai parameter
            stmt.setString(1, noProduction); // no_production
            stmt.setString(2, formattedDate); // date
            stmt.setInt(3, operatorId); // id_operator
            stmt.setInt(4, selectedSkuId); // id_sku
            stmt.setInt(5, id_category); // id_category
            stmt.setString(6, description.getText().trim()); // description
            stmt.setInt(7, Integer.parseInt(quantity.getText().trim())); // qty

            // Eksekusi query
            stmt.executeUpdate();

            // Tampilkan pesan sukses
            javax.swing.JOptionPane.showMessageDialog(this, "Data berhasil disimpan!", "Informasi", javax.swing.JOptionPane.INFORMATION_MESSAGE);

            // Reset form setelah data disimpan
            resetForm();

            stmt.close();
            conn.close();
        } catch (SQLException ex) {
            javax.swing.JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat menyimpan data: " + ex.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_saveMouseClicked

    private void name_operatorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_name_operatorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_name_operatorActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saveActionPerformed

    private void loadCategories() {
        try {
            Connection conn = new connection().connect();
            String sql = "SELECT name FROM tb_category ORDER BY name";
            PreparedStatement stmt = conn.prepareStatement(sql);
            ResultSet rs = stmt.executeQuery();
            
            // Hapus semua item yang ada di ComboBox
            category_product.removeAllItems();
            
            // Tambahkan item kosong sebagai pilihan default
            category_product.addItem("");
            
            // Tambahkan kategori dari database
            while (rs.next()) {
                category_product.addItem(rs.getString("name"));
            }
            
            rs.close();
            stmt.close();
            conn.close();
            
        } catch (SQLException ex) {
            System.out.println("Error loading categories: " + ex.getMessage());
        }
    }

    private void searchSKU() {
        String searchText = sku.getText().trim();
        selectedSkuId = null; // Reset ID SKU ketika melakukan pencarian baru

        if (!searchText.isEmpty()) {
            try {
                Connection conn = new connection().connect();
                String sql = "SELECT s.id, s.sku, s.category, s.description, s.price, c.name as category_name " +
                           "FROM tb_sku s " +
                           "LEFT JOIN tb_category c ON s.category = c.name " +
                           "WHERE s.sku LIKE ?";
                PreparedStatement stmt = conn.prepareStatement(sql);
                stmt.setString(1, "%" + searchText + "%");

                ResultSet rs = stmt.executeQuery();

                if (rs.next()) {
                    // Simpan ID SKU yang ditemukan
                    selectedSkuId = rs.getInt("id");
                    // Mengisi field dengan data dari database
                    String categoryName = rs.getString("category_name");
                    if (categoryName != null) {
                        // Cari dan pilih kategori yang sesuai di ComboBox
                        for (int i = 0; i < category_product.getItemCount(); i++) {
                            if (category_product.getItemAt(i).equals(categoryName)) {
                                category_product.setSelectedIndex(i);
                                break;
                            }
                        }
                    }
                    description.setText(rs.getString("description").trim());
                } else {
                    // Jika tidak ditemukan, kosongkan field
                    category_product.setSelectedIndex(0); // Pilih item kosong
                    description.setText("");
                }

                rs.close();
                stmt.close();
                conn.close();

            } catch (SQLException ex) {
                System.out.println("Error searching SKU: " + ex.getMessage());
            }
        } else {
            // Jika field SKU kosong, kosongkan field terkait
            category_product.setSelectedIndex(0); // Pilih item kosong
            description.setText("");
        }
    }

    private void resetForm() {
        sku.setText("");
        category_product.setSelectedIndex(0);
        description.setText("");
        quantity.setText("");
        selectedSkuId = null;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton back;
    private javax.swing.JComboBox<String> category_product;
    private javax.swing.JTextArea description;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField name_operator;
    private javax.swing.JLabel price2;
    private javax.swing.JTextField quantity;
    private javax.swing.JToggleButton save;
    private javax.swing.JTextField sku;
    private javax.swing.JTextField time;
    // End of variables declaration//GEN-END:variables
}