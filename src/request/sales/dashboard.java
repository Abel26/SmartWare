/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package request.sales;

import connection.connection;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import reports.SalesReportGenerator;  // Perubahan import
import reports.SimpleReportViewer;    // Import untuk alternatif
import utils.TableUtil;

/**
 *
 * @author Lenovo
 */
public class dashboard extends javax.swing.JPanel {
    private String usernameLogin;
    

    /**
     * Creates new form dashboard
     */
    public dashboard(String username, javax.swing.JPanel utama) {
        initComponents();
        this.usernameLogin = username;
        this.utama = utama;
        table();
    }
    private javax.swing.JPanel utama;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_sales = new javax.swing.JTable();
        btn_buat_pengajuan = new javax.swing.JToggleButton();
        btn_laporan = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/img/box.png"))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Cambria Math", 1, 36)); // NOI18N
        jLabel1.setText("Request Sales Overview");

        table_sales.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(table_sales);

        btn_buat_pengajuan.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        btn_buat_pengajuan.setText("Buat Pengajuan");
        btn_buat_pengajuan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_buat_pengajuanActionPerformed(evt);
            }
        });

        btn_laporan.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        btn_laporan.setText("Cetak Laporan");
        btn_laporan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_laporanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btn_laporan, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_buat_pengajuan))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1078, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel7)
                            .addGap(18, 18, 18)
                            .addComponent(jLabel1))))
                .addContainerGap(154, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel7))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_buat_pengajuan, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_laporan, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(56, 56, 56)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(400, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btn_buat_pengajuanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_buat_pengajuanActionPerformed
        utama.removeAll();

        // Tambahkan form_sales_request ke panel utama
        form_sales_request form = new form_sales_request(usernameLogin, utama);
        utama.add(form);

        // Refresh panel utama
        utama.repaint();
        utama.revalidate();
    
        
    }//GEN-LAST:event_btn_buat_pengajuanActionPerformed

    private void btn_laporanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_laporanActionPerformed
        try {
            // Coba cek apakah JasperReport tersedia
            Class.forName("net.sf.jasperreports.engine.JasperReport");
            
            // Jika berhasil, tampilkan laporan dengan JasperReports
            SalesReportGenerator reportGenerator = new SalesReportGenerator();
            reportGenerator.showSalesReport();
            
        } catch (ClassNotFoundException e) {
            // JasperReport tidak tersedia, tampilkan pesan dan gunakan SimpleReportViewer
            int option = JOptionPane.showConfirmDialog(this,
                "Library JasperReports tidak ditemukan. Gunakan tampilan laporan sederhana?",
                "Library Tidak Tersedia",
                JOptionPane.YES_NO_OPTION);
            
            if (option == JOptionPane.YES_OPTION) {
                // Gunakan alternatif SimpleReportViewer
                SimpleReportViewer.showReport();
            } else {
                // Tampilkan petunjuk instalasi
                JOptionPane.showMessageDialog(this,
                    "Silakan instal library JasperReports terlebih dahulu.\n" +
                    "Lihat panduan di file INSTALL_JASPERREPORTS.md",
                    "Instalasi Library",
                    JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (Exception e) {
            // Error lain, tampilkan error dan gunakan SimpleReportViewer
            JOptionPane.showMessageDialog(this,
                "Error: " + e.getMessage() + "\nMenggunakan tampilan laporan sederhana.",
                "Error",
                JOptionPane.ERROR_MESSAGE);
            
            SimpleReportViewer.showReport();
        }
    }//GEN-LAST:event_btn_laporanActionPerformed

    public void table() {
        DefaultTableModel table = new DefaultTableModel();
        table.addColumn("No Sales");
        table.addColumn("Waktu");
        table.addColumn("Deskripsi");
        table.addColumn("Operator");
        table.addColumn("Tujuan");
        table.addColumn("Kuantiti");
        table.addColumn("Harga");
        table.addColumn("Diskon");
        table.addColumn("Total Harga");
        table.addColumn("Status");
        
        table_sales.setModel(table);
        
        // Apply custom table styling
        utils.TableUtil.applyCustomTable(table_sales, jScrollPane1);
        
        // Set lebar kolom
        table_sales.getColumnModel().getColumn(0).setPreferredWidth(100);  // No Sales
        table_sales.getColumnModel().getColumn(1).setPreferredWidth(120);  // Waktu
        table_sales.getColumnModel().getColumn(2).setPreferredWidth(200);  // Deskripsi
        table_sales.getColumnModel().getColumn(3).setPreferredWidth(120);  // Operator
        table_sales.getColumnModel().getColumn(4).setPreferredWidth(120);  // Tujuan
        table_sales.getColumnModel().getColumn(5).setPreferredWidth(80);   // Kuantiti
        table_sales.getColumnModel().getColumn(6).setPreferredWidth(100);  // Harga
        table_sales.getColumnModel().getColumn(7).setPreferredWidth(80);   // Diskon
        table_sales.getColumnModel().getColumn(8).setPreferredWidth(120);  // Total Harga
        table_sales.getColumnModel().getColumn(9).setPreferredWidth(120);  // Status

        Connection conn = new connection().connect();
        if (conn == null) {
            System.out.println("Koneksi ke database gagal!");
            return;
        }

        try {
            String sql = "SELECT s.no_sales, s.date, s.deskripsi, u.name AS operator_name, p.name AS partner_name, s.qty, s.price, s.discount, s.total, s.status " +
                 "FROM tb_sales_request AS s " +
                 "LEFT JOIN tb_users AS u ON s.id_operator = u.id " +
                 "LEFT JOIN tb_partner AS p ON s.id_partner = p.id";

            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(sql);

            while (rs.next()) {
                String noSales = rs.getString("no_sales");
                Object status = rs.getObject("status");
                String statusText;
                
                if (status == null) {
                    statusText = "Menunggu Persetujuan";
                } else {
                    boolean statusBool = rs.getBoolean("status");
                    statusText = statusBool ? "Diterima" : "Ditolak";
                }
                
                // Format currency and numbers
                double price = rs.getDouble("price");
                double discount = rs.getDouble("discount");
                double total = rs.getDouble("total");
                
                Object[] row = {
                    noSales,       
                    rs.getString("date"),          
                    rs.getString("deskripsi"),     
                    rs.getString("operator_name"), 
                    rs.getString("partner_name"),    
                    rs.getInt("qty"),              
                    String.format("Rp %,.0f", price),         
                    String.format("%,.0f", discount),      
                    String.format("Rp %,.0f", total),
                    statusText
                };
                table.addRow(row);
            }
        } catch (SQLException e) {
            System.out.println("Error saat mengambil data dari database: " + e.getMessage());
            e.printStackTrace();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btn_buat_pengajuan;
    private javax.swing.JButton btn_laporan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table_sales;
    // End of variables declaration//GEN-END:variables
}
